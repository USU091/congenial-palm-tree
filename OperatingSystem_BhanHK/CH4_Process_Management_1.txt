	ss Creation)

-부모 프로세스(Parent process)가 자식 프로세스(children process) 생성
- 프로세스의 트리(계층 구조) 형성
- 프로세스는 자원을 필요로 함
	- 운영체제로부터 받는다.
	- 부모와 공유한다.
- 자원의 공유
	- 부모와 자식이 모든 자원을 공유하는 모델
	- 일부를 공유하는 모델
	- 전혀 공유하지 않는 모델
-수행(Excution)
	- 부모와 자식은 공존하며 수행되는 모델
	- 자식이 종료(terminate)될 때까지 부모가 기다리는(wait)모델


exec() 시스템 콜을 통해 새로운 프로그램을 메모리에 올린다.

##주소 공간 (Address space)
	-자식은 부모의 공간을 복제함(binary and OS data) : 프로세스가 실행되려면 자원을 필요로 하므로 자식 프로세스는 부모 프로세스의 주소공간 및 운영체제의 데이터(PCB등)을 그대로 복제한다.
	-자식은 그 공간에 새로운 프로그램을 올린다. 
	
##유닉스의 예
- fork()라는 시스템 콜이 새로운 프로세스를 생성
	-부모를 그대로 복사(OS data except PID + binary)
	-주소 공간 할당
- fork 다음에 이어지는 exec() 시스템 콜을 통해 새로운 프로그램을 메모리에 올림


## 프로세스 종료(Process Termination)
- 프로세스가 마지막 명령을 수행한 후 운영체제에게 이를 알려줌(exit)
	- 자식이 부모에게 output data를 보냄(via wait).
	- 프로세스의 각종 자원들이 운영체제에게 반남됨.
	=> 자식 프로세스가 자발적으로 종료할 때

- 부모 프로세스가 자식의 수행을 종료시킴(abort) : 강제종료
	-자식이 할당 자원의 한계치를 넘어섬
	- 자식에게 할당된 태스크가 더 이상 필요하지 않음.
	- 부모가 종료(exit)하는 경우 
		- 운영체제는 부모 프로세스가 종료하는 경우 자식이 더 이상 수행되도록 두지 않는다.
		- 단계적인 종료 (자식 프로세스의 자식, 즉 손주 프로세스부터 자식 프로세스, 부모 프로세스의 순으로 단계적으로 종료함)("%c\n", d);

